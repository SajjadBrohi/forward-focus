{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PipeTransport = void 0;\n/**\n * Copyright 2018 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst helper_js_1 = require(\"../common/helper.js\");\n\nclass PipeTransport {\n  constructor(pipeWrite, pipeRead) {\n    this._pipeWrite = pipeWrite;\n    this._pendingMessage = '';\n    this._eventListeners = [helper_js_1.helper.addEventListener(pipeRead, 'data', buffer => this._dispatch(buffer)), helper_js_1.helper.addEventListener(pipeRead, 'close', () => {\n      if (this.onclose) this.onclose.call(null);\n    }), helper_js_1.helper.addEventListener(pipeRead, 'error', helper_js_1.debugError), helper_js_1.helper.addEventListener(pipeWrite, 'error', helper_js_1.debugError)];\n    this.onmessage = null;\n    this.onclose = null;\n  }\n\n  send(message) {\n    this._pipeWrite.write(message);\n\n    this._pipeWrite.write('\\0');\n  }\n\n  _dispatch(buffer) {\n    let end = buffer.indexOf('\\0');\n\n    if (end === -1) {\n      this._pendingMessage += buffer.toString();\n      return;\n    }\n\n    const message = this._pendingMessage + buffer.toString(undefined, 0, end);\n    if (this.onmessage) this.onmessage.call(null, message);\n    let start = end + 1;\n    end = buffer.indexOf('\\0', start);\n\n    while (end !== -1) {\n      if (this.onmessage) this.onmessage.call(null, buffer.toString(undefined, start, end));\n      start = end + 1;\n      end = buffer.indexOf('\\0', start);\n    }\n\n    this._pendingMessage = buffer.toString(undefined, start);\n  }\n\n  close() {\n    this._pipeWrite = null;\n    helper_js_1.helper.removeEventListeners(this._eventListeners);\n  }\n\n}\n\nexports.PipeTransport = PipeTransport;","map":{"version":3,"sources":["C:/Users/Sajjad Brohi/JavaScript Projects/RESTful API/packages/client/node_modules/puppeteer/lib/cjs/puppeteer/node/PipeTransport.js"],"names":["Object","defineProperty","exports","value","PipeTransport","helper_js_1","require","constructor","pipeWrite","pipeRead","_pipeWrite","_pendingMessage","_eventListeners","helper","addEventListener","buffer","_dispatch","onclose","call","debugError","onmessage","send","message","write","end","indexOf","toString","undefined","start","close","removeEventListeners"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,aAAR,GAAwB,KAAK,CAA7B;AACA;;;;;;;;;;;;;;;;AAeA,MAAMC,WAAW,GAAGC,OAAO,CAAC,qBAAD,CAA3B;;AACA,MAAMF,aAAN,CAAoB;AAChBG,EAAAA,WAAW,CAACC,SAAD,EAAYC,QAAZ,EAAsB;AAC7B,SAAKC,UAAL,GAAkBF,SAAlB;AACA,SAAKG,eAAL,GAAuB,EAAvB;AACA,SAAKC,eAAL,GAAuB,CACnBP,WAAW,CAACQ,MAAZ,CAAmBC,gBAAnB,CAAoCL,QAApC,EAA8C,MAA9C,EAAuDM,MAAD,IAAY,KAAKC,SAAL,CAAeD,MAAf,CAAlE,CADmB,EAEnBV,WAAW,CAACQ,MAAZ,CAAmBC,gBAAnB,CAAoCL,QAApC,EAA8C,OAA9C,EAAuD,MAAM;AACzD,UAAI,KAAKQ,OAAT,EACI,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB;AACP,KAHD,CAFmB,EAMnBb,WAAW,CAACQ,MAAZ,CAAmBC,gBAAnB,CAAoCL,QAApC,EAA8C,OAA9C,EAAuDJ,WAAW,CAACc,UAAnE,CANmB,EAOnBd,WAAW,CAACQ,MAAZ,CAAmBC,gBAAnB,CAAoCN,SAApC,EAA+C,OAA/C,EAAwDH,WAAW,CAACc,UAApE,CAPmB,CAAvB;AASA,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKH,OAAL,GAAe,IAAf;AACH;;AACDI,EAAAA,IAAI,CAACC,OAAD,EAAU;AACV,SAAKZ,UAAL,CAAgBa,KAAhB,CAAsBD,OAAtB;;AACA,SAAKZ,UAAL,CAAgBa,KAAhB,CAAsB,IAAtB;AACH;;AACDP,EAAAA,SAAS,CAACD,MAAD,EAAS;AACd,QAAIS,GAAG,GAAGT,MAAM,CAACU,OAAP,CAAe,IAAf,CAAV;;AACA,QAAID,GAAG,KAAK,CAAC,CAAb,EAAgB;AACZ,WAAKb,eAAL,IAAwBI,MAAM,CAACW,QAAP,EAAxB;AACA;AACH;;AACD,UAAMJ,OAAO,GAAG,KAAKX,eAAL,GAAuBI,MAAM,CAACW,QAAP,CAAgBC,SAAhB,EAA2B,CAA3B,EAA8BH,GAA9B,CAAvC;AACA,QAAI,KAAKJ,SAAT,EACI,KAAKA,SAAL,CAAeF,IAAf,CAAoB,IAApB,EAA0BI,OAA1B;AACJ,QAAIM,KAAK,GAAGJ,GAAG,GAAG,CAAlB;AACAA,IAAAA,GAAG,GAAGT,MAAM,CAACU,OAAP,CAAe,IAAf,EAAqBG,KAArB,CAAN;;AACA,WAAOJ,GAAG,KAAK,CAAC,CAAhB,EAAmB;AACf,UAAI,KAAKJ,SAAT,EACI,KAAKA,SAAL,CAAeF,IAAf,CAAoB,IAApB,EAA0BH,MAAM,CAACW,QAAP,CAAgBC,SAAhB,EAA2BC,KAA3B,EAAkCJ,GAAlC,CAA1B;AACJI,MAAAA,KAAK,GAAGJ,GAAG,GAAG,CAAd;AACAA,MAAAA,GAAG,GAAGT,MAAM,CAACU,OAAP,CAAe,IAAf,EAAqBG,KAArB,CAAN;AACH;;AACD,SAAKjB,eAAL,GAAuBI,MAAM,CAACW,QAAP,CAAgBC,SAAhB,EAA2BC,KAA3B,CAAvB;AACH;;AACDC,EAAAA,KAAK,GAAG;AACJ,SAAKnB,UAAL,GAAkB,IAAlB;AACAL,IAAAA,WAAW,CAACQ,MAAZ,CAAmBiB,oBAAnB,CAAwC,KAAKlB,eAA7C;AACH;;AA1Ce;;AA4CpBV,OAAO,CAACE,aAAR,GAAwBA,aAAxB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PipeTransport = void 0;\n/**\n * Copyright 2018 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst helper_js_1 = require(\"../common/helper.js\");\nclass PipeTransport {\n    constructor(pipeWrite, pipeRead) {\n        this._pipeWrite = pipeWrite;\n        this._pendingMessage = '';\n        this._eventListeners = [\n            helper_js_1.helper.addEventListener(pipeRead, 'data', (buffer) => this._dispatch(buffer)),\n            helper_js_1.helper.addEventListener(pipeRead, 'close', () => {\n                if (this.onclose)\n                    this.onclose.call(null);\n            }),\n            helper_js_1.helper.addEventListener(pipeRead, 'error', helper_js_1.debugError),\n            helper_js_1.helper.addEventListener(pipeWrite, 'error', helper_js_1.debugError),\n        ];\n        this.onmessage = null;\n        this.onclose = null;\n    }\n    send(message) {\n        this._pipeWrite.write(message);\n        this._pipeWrite.write('\\0');\n    }\n    _dispatch(buffer) {\n        let end = buffer.indexOf('\\0');\n        if (end === -1) {\n            this._pendingMessage += buffer.toString();\n            return;\n        }\n        const message = this._pendingMessage + buffer.toString(undefined, 0, end);\n        if (this.onmessage)\n            this.onmessage.call(null, message);\n        let start = end + 1;\n        end = buffer.indexOf('\\0', start);\n        while (end !== -1) {\n            if (this.onmessage)\n                this.onmessage.call(null, buffer.toString(undefined, start, end));\n            start = end + 1;\n            end = buffer.indexOf('\\0', start);\n        }\n        this._pendingMessage = buffer.toString(undefined, start);\n    }\n    close() {\n        this._pipeWrite = null;\n        helper_js_1.helper.removeEventListeners(this._eventListeners);\n    }\n}\nexports.PipeTransport = PipeTransport;\n"]},"metadata":{},"sourceType":"script"}