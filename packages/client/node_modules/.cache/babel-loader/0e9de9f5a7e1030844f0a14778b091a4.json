{"ast":null,"code":"async function apiPostNote(title, content, httpMethod) {\n  const reactURI = process.env.REACT_URI || \"localhost\";\n\n  if (httpMethod === 'DELETE') {\n    let response = await fetch(`http://${reactURI}:4000/articles/${title}`, {\n      method: httpMethod\n    });\n    return response.status;\n  } else {\n    let response = await fetch(`http://${reactURI}:4000/articles?title=${title}&content=${content}`, {\n      method: httpMethod\n    });\n    return response.status;\n  }\n}\n\nexport default apiPostNote;","map":{"version":3,"sources":["/packages/client/src/components/questions-and-answers/FetchCall.ts"],"names":["apiPostNote","title","content","httpMethod","reactURI","process","env","REACT_URI","response","fetch","method","status"],"mappings":"AACA,eAAeA,WAAf,CAA2BC,KAA3B,EAA0CC,OAA1C,EAA2DC,UAA3D,EAA+E;AAC9E,QAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,SAAZ,IAAyB,WAA1C;;AACA,MAAIJ,UAAU,KAAK,QAAnB,EAA6B;AAC5B,QAAIK,QAAQ,GAAG,MAAMC,KAAK,CACxB,UAASL,QAAS,kBAAiBH,KAAM,EADjB,EAEzB;AACCS,MAAAA,MAAM,EAAEP;AADT,KAFyB,CAA1B;AAMA,WAAOK,QAAQ,CAACG,MAAhB;AACA,GARD,MAQO;AACN,QAAIH,QAAQ,GAAG,MAAMC,KAAK,CACxB,UAASL,QAAS,wBAAuBH,KAAM,YAAWC,OAAQ,EAD1C,EAEzB;AACCQ,MAAAA,MAAM,EAAEP;AADT,KAFyB,CAA1B;AAMA,WAAOK,QAAQ,CAACG,MAAhB;AACA;AACD;;AAED,eAAeX,WAAf","sourcesContent":["\r\nasync function apiPostNote(title: string, content: string, httpMethod: string) {\r\n\tconst reactURI = process.env.REACT_URI || \"localhost\";\r\n\tif (httpMethod === 'DELETE') {\r\n\t\tlet response = await fetch(\r\n\t\t\t`http://${reactURI}:4000/articles/${title}`,\r\n\t\t\t{\r\n\t\t\t\tmethod: httpMethod,\r\n\t\t\t},\r\n\t\t);\r\n\t\treturn response.status;\r\n\t} else {\r\n\t\tlet response = await fetch(\r\n\t\t\t`http://${reactURI}:4000/articles?title=${title}&content=${content}`,\r\n\t\t\t{\r\n\t\t\t\tmethod: httpMethod,\r\n\t\t\t},\r\n\t\t);\r\n\t\treturn response.status;\r\n\t}\r\n}\r\n\r\nexport default apiPostNote;"]},"metadata":{},"sourceType":"module"}