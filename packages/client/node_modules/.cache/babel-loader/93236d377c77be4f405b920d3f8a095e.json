{"ast":null,"code":"var _jsxFileName = \"/packages/client/src/components/questions-and-answers/CreateArea.tsx\";\nimport React, { useState } from 'react';\nimport fetchCall from './FetchCall';\n\nfunction CreateArea(props) {\n  const [post, setPost] = useState({\n    title: '',\n    content: ''\n  });\n\n  function updatePost(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setPost(prevVal => {\n      return { ...prevVal,\n        [name]: value\n      };\n    });\n  }\n\n  function submitForm(event) {\n    if (post.title !== '') {\n      props.postFunction(post);\n      fetchCall(post.title, post.content, 'POST');\n    }\n\n    setPost({\n      title: '',\n      content: ''\n    });\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"create-note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: updatePost,\n    name: \"title\",\n    placeholder: \"Question Summary\",\n    value: post.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    onChange: updatePost,\n    name: \"content\",\n    placeholder: \"Details\",\n    rows: 3,\n    value: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => {\n      submitForm(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, \"Add\")));\n}\n\nexport default CreateArea;","map":{"version":3,"sources":["/packages/client/src/components/questions-and-answers/CreateArea.tsx"],"names":["React","useState","fetchCall","CreateArea","props","post","setPost","title","content","updatePost","event","name","value","target","prevVal","submitForm","postFunction","preventDefault","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAWA,SAASC,UAAT,CAAoBC,KAApB,EAAkC;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAO;AACtCM,IAAAA,KAAK,EAAE,EAD+B;AAEtCC,IAAAA,OAAO,EAAE;AAF6B,GAAP,CAAhC;;AAKA,WAASC,UAAT,CAAoBC,KAApB,EAAgC;AAC/B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACAP,IAAAA,OAAO,CAAEQ,OAAD,IAAa;AACpB,aAAO,EACN,GAAGA,OADG;AAEN,SAACH,IAAD,GAAQC;AAFF,OAAP;AAIA,KALM,CAAP;AAMA;;AAED,WAASG,UAAT,CAAoBL,KAApB,EAAgC;AAC/B,QAAIL,IAAI,CAACE,KAAL,KAAe,EAAnB,EAAuB;AACtBH,MAAAA,KAAK,CAACY,YAAN,CAAmBX,IAAnB;AACAH,MAAAA,SAAS,CAACG,IAAI,CAACE,KAAN,EAAaF,IAAI,CAACG,OAAlB,EAA2B,MAA3B,CAAT;AACA;;AACDF,IAAAA,OAAO,CAAC;AACPC,MAAAA,KAAK,EAAE,EADA;AAEPC,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAP;AAIAE,IAAAA,KAAK,CAACO,cAAN;AACA;;AAED,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AACC,IAAA,QAAQ,EAAER,UADX;AAEC,IAAA,IAAI,EAAC,OAFN;AAGC,IAAA,WAAW,EAAC,kBAHb;AAIC,IAAA,KAAK,EAAEJ,IAAI,CAACE,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAOC;AACC,IAAA,QAAQ,EAAEE,UADX;AAEC,IAAA,IAAI,EAAC,SAFN;AAGC,IAAA,WAAW,EAAC,SAHb;AAIC,IAAA,IAAI,EAAE,CAJP;AAKC,IAAA,KAAK,EAAEJ,IAAI,CAACG,OALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,eAcC;AACC,IAAA,OAAO,EAAGU,CAAD,IAAY;AACpBH,MAAAA,UAAU,CAACG,CAAD,CAAV;AACA,KAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAdD,CADD,CADD;AA0BA;;AACD,eAAef,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport fetchCall from './FetchCall';\n\ninterface Props {\n\tpostFunction: (post: Post) => void;\n}\n\ninterface Post {\n\ttitle: string;\n\tcontent: string;\n}\n\nfunction CreateArea(props: Props) {\n\tconst [post, setPost] = useState<Post>({\n\t\ttitle: '',\n\t\tcontent: '',\n\t});\n\n\tfunction updatePost(event: any) {\n\t\tconst { name, value } = event.target;\n\t\tsetPost((prevVal) => {\n\t\t\treturn {\n\t\t\t\t...prevVal,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t}\n\n\tfunction submitForm(event: any) {\n\t\tif (post.title !== '') {\n\t\t\tprops.postFunction(post);\n\t\t\tfetchCall(post.title, post.content, 'POST');\t\n\t\t}\n\t\tsetPost({\n\t\t\ttitle: '',\n\t\t\tcontent: '',\n\t\t});\n\t\tevent.preventDefault();\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<form className=\"create-note\">\n\t\t\t\t<input\n\t\t\t\t\tonChange={updatePost}\n\t\t\t\t\tname=\"title\"\n\t\t\t\t\tplaceholder=\"Question Summary\"\n\t\t\t\t\tvalue={post.title}\n\t\t\t\t/>\n\t\t\t\t<textarea\n\t\t\t\t\tonChange={updatePost}\n\t\t\t\t\tname=\"content\"\n\t\t\t\t\tplaceholder=\"Details\"\n\t\t\t\t\trows={3}\n\t\t\t\t\tvalue={post.content}\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\tonClick={(e: any) => {\n\t\t\t\t\t\tsubmitForm(e);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tAdd\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\nexport default CreateArea;\n"]},"metadata":{},"sourceType":"module"}