{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Puppeteer = void 0;\n/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Launcher_js_1 = __importDefault(require(\"../node/Launcher.js\"));\n\nconst BrowserFetcher_js_1 = require(\"../node/BrowserFetcher.js\");\n\nconst Errors_js_1 = require(\"./Errors.js\");\n\nconst DeviceDescriptors_js_1 = require(\"./DeviceDescriptors.js\");\n\nconst QueryHandler_js_1 = require(\"./QueryHandler.js\");\n\nconst revisions_js_1 = require(\"../revisions.js\");\n/**\n * The main Puppeteer class. Provides the {@link Puppeteer.launch | launch}\n * method to launch a browser.\n *\n * When you `require` or `import` the Puppeteer npm package you get back an\n * instance of this class.\n *\n * @remarks\n *\n * @example\n * The following is a typical example of using Puppeteer to drive automation:\n * ```js\n * const puppeteer = require('puppeteer');\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://www.google.com');\n *   // other actions...\n *   await browser.close();\n * })();\n * ```\n *\n * Once you have created a `page` you have access to a large API to interact\n * with the page, navigate, or find certain elements in that page.\n * The {@link Page | `page` documentation} lists all the available methods.\n *\n * @public\n */\n\n\nclass Puppeteer {\n  /**\n   * @internal\n   */\n  constructor(projectRoot, preferredRevision, isPuppeteerCore, productName) {\n    this._changedProduct = false;\n    this._projectRoot = projectRoot;\n    this._preferredRevision = preferredRevision;\n    this._isPuppeteerCore = isPuppeteerCore; // track changes to Launcher configuration via options or environment variables\n\n    this.__productName = productName;\n  }\n  /**\n   * Launches puppeteer and launches a browser instance with given arguments\n   * and options when specified.\n   *\n   * @remarks\n   *\n   * @example\n   * You can use `ignoreDefaultArgs` to filter out `--mute-audio` from default arguments:\n   * ```js\n   * const browser = await puppeteer.launch({\n   *   ignoreDefaultArgs: ['--mute-audio']\n   * });\n   * ```\n   *\n   * **NOTE** Puppeteer can also be used to control the Chrome browser,\n   * but it works best with the version of Chromium it is bundled with.\n   * There is no guarantee it will work with any other version.\n   * Use `executablePath` option with extreme caution.\n   * If Google Chrome (rather than Chromium) is preferred, a {@link https://www.google.com/chrome/browser/canary.html | Chrome Canary} or {@link https://www.chromium.org/getting-involved/dev-channel | Dev Channel} build is suggested.\n   * In `puppeteer.launch([options])`, any mention of Chromium also applies to Chrome.\n   * See {@link https://www.howtogeek.com/202825/what%E2%80%99s-the-difference-between-chromium-and-chrome/ | this article} for a description of the differences between Chromium and Chrome. {@link https://chromium.googlesource.com/chromium/src/+/lkgr/docs/chromium_browser_vs_google_chrome.md | This article} describes some differences for Linux users.\n   *\n   * @param options - Set of configurable options to set on the browser.\n   * @returns Promise which resolves to browser instance.\n   */\n\n\n  launch(options = {}) {\n    if (options.product) this._productName = options.product;\n    return this._launcher.launch(options);\n  }\n  /**\n   * This method attaches Puppeteer to an existing browser instance.\n   *\n   * @remarks\n   *\n   * @param options - Set of configurable options to set on the browser.\n   * @returns Promise which resolves to browser instance.\n   */\n\n\n  connect(options) {\n    if (options.product) this._productName = options.product;\n    return this._launcher.connect(options);\n  }\n  /**\n   * @internal\n   */\n\n\n  get _productName() {\n    return this.__productName;\n  } // don't need any TSDoc here - because the getter is internal the setter is too.\n\n\n  set _productName(name) {\n    if (this.__productName !== name) this._changedProduct = true;\n    this.__productName = name;\n  }\n  /**\n   * @remarks\n   *\n   * **NOTE** `puppeteer.executablePath()` is affected by the `PUPPETEER_EXECUTABLE_PATH`\n   * and `PUPPETEER_CHROMIUM_REVISION` environment variables.\n   *\n   * @returns A path where Puppeteer expects to find the bundled browser.\n   * The browser binary might not be there if the download was skipped with\n   * the `PUPPETEER_SKIP_DOWNLOAD` environment variable.\n   */\n\n\n  executablePath() {\n    return this._launcher.executablePath();\n  }\n  /**\n   * @internal\n   */\n\n\n  get _launcher() {\n    if (!this._lazyLauncher || this._lazyLauncher.product !== this._productName || this._changedProduct) {\n      switch (this._productName) {\n        case 'firefox':\n          this._preferredRevision = revisions_js_1.PUPPETEER_REVISIONS.firefox;\n          break;\n\n        case 'chrome':\n        default:\n          this._preferredRevision = revisions_js_1.PUPPETEER_REVISIONS.chromium;\n      }\n\n      this._changedProduct = false;\n      this._lazyLauncher = Launcher_js_1.default(this._projectRoot, this._preferredRevision, this._isPuppeteerCore, this._productName);\n    }\n\n    return this._lazyLauncher;\n  }\n  /**\n   * The name of the browser that is under automation (`\"chrome\"` or `\"firefox\"`)\n   *\n   * @remarks\n   * The product is set by the `PUPPETEER_PRODUCT` environment variable or the `product`\n   * option in `puppeteer.launch([options])` and defaults to `chrome`.\n   * Firefox support is experimental.\n   */\n\n\n  get product() {\n    return this._launcher.product;\n  }\n  /**\n   * @remarks\n   * A list of devices to be used with `page.emulate(options)`. Actual list of devices can be found in {@link https://github.com/puppeteer/puppeteer/blob/main/src/common/DeviceDescriptors.ts | src/common/DeviceDescriptors.ts}.\n   *\n   * @example\n   *\n   * ```js\n   * const puppeteer = require('puppeteer');\n   * const iPhone = puppeteer.devices['iPhone 6'];\n   *\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   await page.emulate(iPhone);\n   *   await page.goto('https://www.google.com');\n   *   // other actions...\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   */\n\n\n  get devices() {\n    return DeviceDescriptors_js_1.devicesMap;\n  }\n  /**\n   * @remarks\n   *\n   * Puppeteer methods might throw errors if they are unable to fulfill a request.\n   * For example, `page.waitForSelector(selector[, options])` might fail if\n   * the selector doesn't match any nodes during the given timeframe.\n   *\n   * For certain types of errors Puppeteer uses specific error classes.\n   * These classes are available via `puppeteer.errors`.\n   *\n   * @example\n   * An example of handling a timeout error:\n   * ```js\n   * try {\n   *   await page.waitForSelector('.foo');\n   * } catch (e) {\n   *   if (e instanceof puppeteer.errors.TimeoutError) {\n   *     // Do something if this is a timeout.\n   *   }\n   * }\n   * ```\n   */\n\n\n  get errors() {\n    return Errors_js_1.puppeteerErrors;\n  }\n  /**\n   *\n   * @param options - Set of configurable options to set on the browser.\n   * @returns The default flags that Chromium will be launched with.\n   */\n\n\n  defaultArgs(options = {}) {\n    return this._launcher.defaultArgs(options);\n  }\n  /**\n   * @param options - Set of configurable options to specify the settings\n   * of the BrowserFetcher.\n   * @returns A new BrowserFetcher instance.\n   */\n\n\n  createBrowserFetcher(options) {\n    return new BrowserFetcher_js_1.BrowserFetcher(this._projectRoot, options);\n  }\n  /**\n   * @internal\n   */\n  // eslint-disable-next-line @typescript-eslint/camelcase\n\n\n  __experimental_registerCustomQueryHandler(name, queryHandler) {\n    QueryHandler_js_1.registerCustomQueryHandler(name, queryHandler);\n  }\n  /**\n   * @internal\n   */\n  // eslint-disable-next-line @typescript-eslint/camelcase\n\n\n  __experimental_unregisterCustomQueryHandler(name) {\n    QueryHandler_js_1.unregisterCustomQueryHandler(name);\n  }\n  /**\n   * @internal\n   */\n  // eslint-disable-next-line @typescript-eslint/camelcase\n\n\n  __experimental_customQueryHandlers() {\n    return QueryHandler_js_1.customQueryHandlers();\n  }\n  /**\n   * @internal\n   */\n  // eslint-disable-next-line @typescript-eslint/camelcase\n\n\n  __experimental_clearQueryHandlers() {\n    QueryHandler_js_1.clearQueryHandlers();\n  }\n\n}\n\nexports.Puppeteer = Puppeteer;","map":{"version":3,"sources":["C:/Users/Sajjad Brohi/JavaScript Projects/RESTful API/packages/client/node_modules/puppeteer/lib/cjs/puppeteer/common/Puppeteer.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","Puppeteer","Launcher_js_1","require","BrowserFetcher_js_1","Errors_js_1","DeviceDescriptors_js_1","QueryHandler_js_1","revisions_js_1","constructor","projectRoot","preferredRevision","isPuppeteerCore","productName","_changedProduct","_projectRoot","_preferredRevision","_isPuppeteerCore","__productName","launch","options","product","_productName","_launcher","connect","name","executablePath","_lazyLauncher","PUPPETEER_REVISIONS","firefox","chromium","default","devices","devicesMap","errors","puppeteerErrors","defaultArgs","createBrowserFetcher","BrowserFetcher","__experimental_registerCustomQueryHandler","queryHandler","registerCustomQueryHandler","__experimental_unregisterCustomQueryHandler","unregisterCustomQueryHandler","__experimental_customQueryHandlers","customQueryHandlers","__experimental_clearQueryHandlers","clearQueryHandlers"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Puppeteer = void 0;\n/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst Launcher_js_1 = __importDefault(require(\"../node/Launcher.js\"));\nconst BrowserFetcher_js_1 = require(\"../node/BrowserFetcher.js\");\nconst Errors_js_1 = require(\"./Errors.js\");\nconst DeviceDescriptors_js_1 = require(\"./DeviceDescriptors.js\");\nconst QueryHandler_js_1 = require(\"./QueryHandler.js\");\nconst revisions_js_1 = require(\"../revisions.js\");\n/**\n * The main Puppeteer class. Provides the {@link Puppeteer.launch | launch}\n * method to launch a browser.\n *\n * When you `require` or `import` the Puppeteer npm package you get back an\n * instance of this class.\n *\n * @remarks\n *\n * @example\n * The following is a typical example of using Puppeteer to drive automation:\n * ```js\n * const puppeteer = require('puppeteer');\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://www.google.com');\n *   // other actions...\n *   await browser.close();\n * })();\n * ```\n *\n * Once you have created a `page` you have access to a large API to interact\n * with the page, navigate, or find certain elements in that page.\n * The {@link Page | `page` documentation} lists all the available methods.\n *\n * @public\n */\nclass Puppeteer {\n    /**\n     * @internal\n     */\n    constructor(projectRoot, preferredRevision, isPuppeteerCore, productName) {\n        this._changedProduct = false;\n        this._projectRoot = projectRoot;\n        this._preferredRevision = preferredRevision;\n        this._isPuppeteerCore = isPuppeteerCore;\n        // track changes to Launcher configuration via options or environment variables\n        this.__productName = productName;\n    }\n    /**\n     * Launches puppeteer and launches a browser instance with given arguments\n     * and options when specified.\n     *\n     * @remarks\n     *\n     * @example\n     * You can use `ignoreDefaultArgs` to filter out `--mute-audio` from default arguments:\n     * ```js\n     * const browser = await puppeteer.launch({\n     *   ignoreDefaultArgs: ['--mute-audio']\n     * });\n     * ```\n     *\n     * **NOTE** Puppeteer can also be used to control the Chrome browser,\n     * but it works best with the version of Chromium it is bundled with.\n     * There is no guarantee it will work with any other version.\n     * Use `executablePath` option with extreme caution.\n     * If Google Chrome (rather than Chromium) is preferred, a {@link https://www.google.com/chrome/browser/canary.html | Chrome Canary} or {@link https://www.chromium.org/getting-involved/dev-channel | Dev Channel} build is suggested.\n     * In `puppeteer.launch([options])`, any mention of Chromium also applies to Chrome.\n     * See {@link https://www.howtogeek.com/202825/what%E2%80%99s-the-difference-between-chromium-and-chrome/ | this article} for a description of the differences between Chromium and Chrome. {@link https://chromium.googlesource.com/chromium/src/+/lkgr/docs/chromium_browser_vs_google_chrome.md | This article} describes some differences for Linux users.\n     *\n     * @param options - Set of configurable options to set on the browser.\n     * @returns Promise which resolves to browser instance.\n     */\n    launch(options = {}) {\n        if (options.product)\n            this._productName = options.product;\n        return this._launcher.launch(options);\n    }\n    /**\n     * This method attaches Puppeteer to an existing browser instance.\n     *\n     * @remarks\n     *\n     * @param options - Set of configurable options to set on the browser.\n     * @returns Promise which resolves to browser instance.\n     */\n    connect(options) {\n        if (options.product)\n            this._productName = options.product;\n        return this._launcher.connect(options);\n    }\n    /**\n     * @internal\n     */\n    get _productName() {\n        return this.__productName;\n    }\n    // don't need any TSDoc here - because the getter is internal the setter is too.\n    set _productName(name) {\n        if (this.__productName !== name)\n            this._changedProduct = true;\n        this.__productName = name;\n    }\n    /**\n     * @remarks\n     *\n     * **NOTE** `puppeteer.executablePath()` is affected by the `PUPPETEER_EXECUTABLE_PATH`\n     * and `PUPPETEER_CHROMIUM_REVISION` environment variables.\n     *\n     * @returns A path where Puppeteer expects to find the bundled browser.\n     * The browser binary might not be there if the download was skipped with\n     * the `PUPPETEER_SKIP_DOWNLOAD` environment variable.\n     */\n    executablePath() {\n        return this._launcher.executablePath();\n    }\n    /**\n     * @internal\n     */\n    get _launcher() {\n        if (!this._lazyLauncher ||\n            this._lazyLauncher.product !== this._productName ||\n            this._changedProduct) {\n            switch (this._productName) {\n                case 'firefox':\n                    this._preferredRevision = revisions_js_1.PUPPETEER_REVISIONS.firefox;\n                    break;\n                case 'chrome':\n                default:\n                    this._preferredRevision = revisions_js_1.PUPPETEER_REVISIONS.chromium;\n            }\n            this._changedProduct = false;\n            this._lazyLauncher = Launcher_js_1.default(this._projectRoot, this._preferredRevision, this._isPuppeteerCore, this._productName);\n        }\n        return this._lazyLauncher;\n    }\n    /**\n     * The name of the browser that is under automation (`\"chrome\"` or `\"firefox\"`)\n     *\n     * @remarks\n     * The product is set by the `PUPPETEER_PRODUCT` environment variable or the `product`\n     * option in `puppeteer.launch([options])` and defaults to `chrome`.\n     * Firefox support is experimental.\n     */\n    get product() {\n        return this._launcher.product;\n    }\n    /**\n     * @remarks\n     * A list of devices to be used with `page.emulate(options)`. Actual list of devices can be found in {@link https://github.com/puppeteer/puppeteer/blob/main/src/common/DeviceDescriptors.ts | src/common/DeviceDescriptors.ts}.\n     *\n     * @example\n     *\n     * ```js\n     * const puppeteer = require('puppeteer');\n     * const iPhone = puppeteer.devices['iPhone 6'];\n     *\n     * (async () => {\n     *   const browser = await puppeteer.launch();\n     *   const page = await browser.newPage();\n     *   await page.emulate(iPhone);\n     *   await page.goto('https://www.google.com');\n     *   // other actions...\n     *   await browser.close();\n     * })();\n     * ```\n     *\n     */\n    get devices() {\n        return DeviceDescriptors_js_1.devicesMap;\n    }\n    /**\n     * @remarks\n     *\n     * Puppeteer methods might throw errors if they are unable to fulfill a request.\n     * For example, `page.waitForSelector(selector[, options])` might fail if\n     * the selector doesn't match any nodes during the given timeframe.\n     *\n     * For certain types of errors Puppeteer uses specific error classes.\n     * These classes are available via `puppeteer.errors`.\n     *\n     * @example\n     * An example of handling a timeout error:\n     * ```js\n     * try {\n     *   await page.waitForSelector('.foo');\n     * } catch (e) {\n     *   if (e instanceof puppeteer.errors.TimeoutError) {\n     *     // Do something if this is a timeout.\n     *   }\n     * }\n     * ```\n     */\n    get errors() {\n        return Errors_js_1.puppeteerErrors;\n    }\n    /**\n     *\n     * @param options - Set of configurable options to set on the browser.\n     * @returns The default flags that Chromium will be launched with.\n     */\n    defaultArgs(options = {}) {\n        return this._launcher.defaultArgs(options);\n    }\n    /**\n     * @param options - Set of configurable options to specify the settings\n     * of the BrowserFetcher.\n     * @returns A new BrowserFetcher instance.\n     */\n    createBrowserFetcher(options) {\n        return new BrowserFetcher_js_1.BrowserFetcher(this._projectRoot, options);\n    }\n    /**\n     * @internal\n     */\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    __experimental_registerCustomQueryHandler(name, queryHandler) {\n        QueryHandler_js_1.registerCustomQueryHandler(name, queryHandler);\n    }\n    /**\n     * @internal\n     */\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    __experimental_unregisterCustomQueryHandler(name) {\n        QueryHandler_js_1.unregisterCustomQueryHandler(name);\n    }\n    /**\n     * @internal\n     */\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    __experimental_customQueryHandlers() {\n        return QueryHandler_js_1.customQueryHandlers();\n    }\n    /**\n     * @internal\n     */\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    __experimental_clearQueryHandlers() {\n        QueryHandler_js_1.clearQueryHandlers();\n    }\n}\nexports.Puppeteer = Puppeteer;\n"]},"metadata":{},"sourceType":"script"}